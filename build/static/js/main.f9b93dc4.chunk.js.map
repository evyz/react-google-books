{"version":3,"sources":["BookComponent.js","App.js","reportWebVitals.js","store.js","index.js"],"names":["BookComponent","observer","active","setActive","store","useContext","Context","console","log","book","className","onClick","e","stopPropagation","volumeInfo","imageLinks","src","thumbnail","alt","title","categories","map","category","authors","value","description","disabled","App","API_KEY","useState","search","setSearch","pagination","setCategory","sort","setSort","total","setTotal","loading","setLoading","setBook","index","setIndex","array","setArray","GenerateQuery","class","onChange","target","result","axios","get","then","data","setBooks","items","totalItems","finally","alert","handleSubmit","books","OpenBook","id","info","push","AppendBooks","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","Store","this","_isTest","_books","_book","smallThumbnail","makeAutoObservable","bool","createContext","ReactDOM","render","Provider","document","getElementById"],"mappings":"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","file":"static/js/main.f9b93dc4.chunk.js","sourcesContent":["import { observer } from 'mobx-react-lite';\r\nimport React, { useContext } from 'react';\r\nimport { Context } from '.';\r\nimport './BookComponent.css';\r\n\r\nconst BookComponent = observer(({ active, setActive }) => {\r\n    const { store } = useContext(Context)\r\n\r\n    console.log(store.book)\r\n\r\n    return (\r\n        <div className={active ? \"Modal\" : \"Off Modal\"} onClick={() => setActive(false)}>\r\n            <div className=\"Content\" onClick={e => e.stopPropagation()}>\r\n                <div className=\"Block Left\">\r\n                    {store.book.volumeInfo && store.book.volumeInfo.imageLinks && <img src={store.book.volumeInfo.imageLinks.thumbnail} alt={store.book.volumeInfo.title} />}\r\n                </div>\r\n                <div className=\"Block Right\">\r\n                    <h2>{store.book.volumeInfo.title && store.book.volumeInfo.title}</h2>\r\n                    <span className=\"Category\">\r\n                        Категории:\r\n                        <ul>\r\n                            {store.book.volumeInfo.categories.map(category =>\r\n                                <li>{category}</li>\r\n                            )}\r\n                        </ul>\r\n                    </span>\r\n\r\n                    <span className=\"Author\">\r\n                        Авторы:\r\n                        <ul>\r\n                            {store.book.volumeInfo.authors.map(category =>\r\n                                <li>{category}</li>\r\n                            )}\r\n                        </ul>\r\n                    </span>\r\n\r\n                    <span className=\"Description\">\r\n                        Описание:\r\n                        <textarea value={store.book.volumeInfo.description} disabled />\r\n                    </span>\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n})\r\n\r\nexport default BookComponent;","import './App.css';\nimport './Loader.css';\nimport { observer } from 'mobx-react-lite';\nimport { useContext, useEffect, useState } from 'react';\nimport { Context } from './index'\nimport axios from 'axios';\nimport BookComponent from './BookComponent';\n\nconst App = observer(() => {\n\n  const { store } = useContext(Context)\n\n  const API_KEY = 'AIzaSyAyKFRxA-xF9QRQ1CPxKCaGMlZAqWQZyGs'\n\n  const [search, setSearch] = useState(\"\")\n  const [pagination, setPagination] = useState(30)\n  const [category, setCategory] = useState(\"all\")\n  const [sort, setSort] = useState('relevance')\n  const [total, setTotal] = useState(null)\n\n  const [loading, setLoading] = useState(false)\n  const [book, setBook] = useState(false)\n\n  const [index, setIndex] = useState(pagination)\n  const [append, setAppend] = useState(\"\")\n\n  const [array, setArray] = useState([])\n\n  const GenerateQuery = () => {\n    let query;\n\n    if (category === 'all' && sort === 'relevance') {\n      query = 'https://www.googleapis.com/books/v1/volumes?q=' + search + '&key=' + API_KEY + '&maxResults=' + pagination;\n      return query;\n    }\n    if (category === 'all' && sort === 'newest') {\n      query = 'https://www.googleapis.com/books/v1/volumes?q=' + search + `&orderBy=newest` + '&key=' + API_KEY + '&maxResults=' + pagination;\n      return query;\n    }\n    if (category && sort === \"relevance\") {\n      query = 'https://www.googleapis.com/books/v1/volumes?q=' + search + '+subject:' + category + '&key=' + API_KEY + '&maxResults=' + pagination;\n      return query;\n    }\n    if (category && sort === \"newest\") {\n      query = 'https://www.googleapis.com/books/v1/volumes?q=' + search + '+subject:' + category + `&orderBy=newest` + '&key=' + API_KEY + '&maxResults=' + pagination;\n      return query;\n    }\n  }\n\n  const handleSubmit = () => {\n    let result = GenerateQuery();\n\n    if (!search) {\n      alert('Укажите ключевое слово для поиска!')\n    }\n    else {\n      setLoading(true)\n      axios.get(result).then(data => {\n        store.setBooks(data.data.items)\n        setArray(data.data.items)\n        setTotal(data.data.totalItems)\n      }).finally(() => setLoading(false))\n    }\n  }\n\n  console.log(array)\n\n  function OpenBook(book) {\n    setBook(true)\n    store.setBook(book)\n  }\n\n  function AppendBooks() {\n    setLoading(true)\n    let result = GenerateQuery() + '&startIndex=' + index\n    setIndex(index + pagination)\n    axios.get(result).then(data => {\n      store.setBooks(data.data.items)\n      store.books.map(info => {\n        array.push(info)\n      })\n    }).finally(() => setLoading(false))\n  }\n\n  return (\n    <div className=\"App\">\n      <BookComponent active={book} setActive={setBook} />\n      <div className=\"Content\">\n\n        <div className={loading ? \"loader\" : \"off loader\"}>\n          <div class=\"lds-roller\"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div>\n        </div>\n\n        <div className=\"Search-for-books\">\n          <h2>Search for books</h2>\n\n          <div>\n            <input\n              className=\"clear-input search-input\"\n              value={search}\n              onChange={e => setSearch(e.target.value)}\n            />\n            <button onClick={() => handleSubmit()}>Search</button>\n          </div>\n\n          <div className=\"Filters\">\n            <div>\n              Categories:\n              <select value={category} onChange={e => setCategory(e.target.value)}>\n                <option value=\"all\">all</option>\n                <option value=\"art\">art</option>\n                <option value=\"biography\">biography</option>\n                <option value=\"computers\">computers</option>\n                <option value=\"history\">history</option>\n                <option value=\"medical\">medical</option>\n                <option value=\"poetry\">poetry</option>\n              </select>\n            </div>\n\n            <div>\n              Sorting by:\n              <select value={sort} onChange={e => setSort(e.target.value)}>\n                <option value=\"relevance\">По актуальности</option>\n                <option value=\"newest\">По новизне</option>\n              </select>\n            </div>\n          </div>\n\n        </div>\n\n        {total && <span className=\"Total\">Total items: {total}</span>}\n\n        <div className=\"Books\">\n\n          {store.books ?\n\n            array.map(book =>\n              <div\n                className=\"Book\"\n                key={book.id}\n                onClick={() => OpenBook(book)}\n              >\n                {book.volumeInfo.imageLinks && <img src={book.volumeInfo.imageLinks.thumbnail} alt={book.volumeInfo.title} />}\n                <span className=\"Book-category\">{book.volumeInfo.categories}</span>\n                <h2 className=\"Book-title\">{book.volumeInfo.title}</h2>\n                <h3 className=\"Book-author\">{book.volumeInfo.authors}</h3>\n              </div>\n            )\n            :\n            <div>Загрузка</div>\n          }\n\n        </div>\n\n        <div className=\"Arrows\">\n          <button onClick={() => AppendBooks()}>Next</button>\n        </div>\n\n      </div>\n    </div>\n  );\n})\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { makeAutoObservable } from 'mobx'\r\n\r\nexport default class Store {\r\n    constructor() {\r\n        this._isTest = false\r\n\r\n        this._books = []\r\n        this._book = {\r\n            id: 1,\r\n            volumeInfo: {\r\n                title: 'Моковое название',\r\n                authors: [\r\n                    \"Evyz\"\r\n                ],\r\n                imageLinks: {\r\n                    smallThumbnail: \"http://books.google.com/books/content?id=MqRXAwAAQBAJ&printsec=frontcover&img=1&zoom=5&edge=curl&source=gbs_api\"\r\n                },\r\n                categories: [\r\n                    \"Practice\"\r\n                ],\r\n                description: \"Тестовое задание\"\r\n\r\n            }\r\n        }\r\n        makeAutoObservable(this)\r\n    }\r\n\r\n    setIsTest(bool) {\r\n        this._isTest = bool\r\n    }\r\n\r\n    setBooks(books) {\r\n        this._books = books\r\n    }\r\n    setBook(book) {\r\n        this._book = book\r\n    }\r\n\r\n    get test() {\r\n        return this._isTest\r\n    }\r\n\r\n    get books() {\r\n        return this._books\r\n    }\r\n    get book() {\r\n        return this._book\r\n    }\r\n\r\n}","import React, { createContext } from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport Store from './store'\n\nexport const Context = createContext(null)\n\nReactDOM.render(\n  <Context.Provider value={{\n    store: new Store()\n  }}>\n    <App />\n  </Context.Provider>\n  ,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}